#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

#define BUFSIZE 1024

/**
 * main - Simple shell that reads commands from standard input and executes them
 *
 * Return: Always 0
 */
int main(void)
{
    char *buffer = malloc(sizeof(char) * BUFSIZE);
    ssize_t n_read;
    size_t bufsize = BUFSIZE;
    char *token, **tokens;
    int i;

    while (1)
    {
        /* Print shell prompt */
        printf("$ ");

        /* Read command from standard input */
        n_read = getline(&buffer, &bufsize, stdin);
        if (n_read == -1)
        {
            perror("getline");
            exit(EXIT_FAILURE);
        }

        /* Parse command into tokens */
        tokens = malloc(sizeof(char *) * bufsize);
        if (!tokens)
        {
            perror("malloc");
            exit(EXIT_FAILURE);
        }

        token = buffer;
        for (i = 0; ; i++)
        {
            /* Find next token */
            while (*token == ' ' || *token == '\t' || *token == '\n')
                token++;

            if (*token == '\0')
                break;

            /* Save token */
            tokens[i] = token;

            /* Find end of token */
            while (*token != ' ' && *token != '\t' && *token != '\n' && *token != '\0')
                token++;

            if (*token == '\0')
                break;

            /* Terminate token */
            *token++ = '\0';
        }
        tokens[i] = NULL;

        /* Print tokens */
        for (i = 0; tokens[i] != NULL; i++)
            printf("Token %d: %s\n", i, tokens[i]);

        /* Free memory */
        free(tokens);
    }

    free(buffer);
    return (0);
}
